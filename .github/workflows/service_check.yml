name: Service Health Check

on:
  schedule:
    - cron: '*/9 * * * *'  # Every 9 minutes
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  check_services:
    runs-on: ubuntu-latest

    steps:
    - name: Initialize error log
      run: touch error.log

    - name: Check Incubator Control Service
      run: |
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/mirror-incubator-control/ping)
        http_code=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/mirror-incubator-control/ping)
        if [[ "$http_code" != "200" || "$response" != "pong" && "$response" != "\"pong\"" ]]; then
          echo "Incubator Control Service is down (HTTP $http_code): $response" >> error.log
        fi

    - name: Check Microscope Control Service
      run: |
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/mirror-microscope-control-squid-1/ping)
        http_code=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/mirror-microscope-control-squid-1/ping)
        if [[ "$http_code" != "200" || "$response" != "pong" && "$response" != "\"pong\"" ]]; then
          echo "Microscope Control Service is down (HTTP $http_code): $response" >> error.log
        fi

    - name: Check Robotic Arm Control Service
      run: |
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/mirror-robotic-arm-control/ping)
        http_code=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/mirror-robotic-arm-control/ping)
        if [[ "$http_code" != "200" || "$response" != "pong" && "$response" != "\"pong\"" ]]; then
          echo "Robotic Arm Control Service is down (HTTP $http_code): $response" >> error.log
        fi

    - name: Check Orchestrator Manager Service
      run: |
        response=$(curl -s -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/orchestrator-manager/ping)
        http_code=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.REEF_WORKSPACE_TOKEN }}" https://hypha.aicell.io/reef-imaging/services/orchestrator-manager/ping)
        if [[ "$http_code" != "200" || "$response" != "pong" && "$response" != "\"pong\"" ]]; then
          echo "Orchestrator Manager Service is down (HTTP $http_code): $response" >> error.log
        fi
        
    - name: Exit with error if any services are down
      run: |
        if [ -s error.log ]; then
          echo "Services have errors:"
          cat error.log
          exit 1
        else
          echo "All services are functioning normally"
        fi
