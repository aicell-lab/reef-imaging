services:
  redis:
    image: redis:6.2.6
    networks:
      - hypha-app-engine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes: 
      - "${DATA_ROOT}/hypha-redis:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 30

  hypha:
    image: ghcr.io/amun-ai/hypha:0.21.18
    restart: always
    networks:
      - hypha-app-engine
    environment:
      # AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      # AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      # AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "9527:9527"
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:9527/health/liveness || exit 1
      interval: 30s
      timeout: 20s
      retries: 3
    # Add --reset-redis to reset the hypha server
    command: python -m hypha.server --host=0.0.0.0 --port=9527 --redis-uri=redis://:${REDIS_PASSWORD}@redis:6379/0 --reset-redis --public-base-url=http://reef.dyn.scilifelab.se:9527 --enable-server-apps --in-docker --enable-s3 --endpoint-url=${S3_ENDPOINT_URL} --endpoint-url-public=${S3_ENDPOINT_PUBLIC_URL} --access-key-id=${S3_ACCESS_KEY} --secret-access-key=${S3_SECRET_KEY} --executable-path=/home/bin
    volumes:
      - "${DATA_ROOT}/hypha-apps:/home/hypha-apps"
    working_dir: /home
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hypha.rule=Host(`reef.aicell.io`)"
      - "traefik.http.routers.hypha.entrypoints=websecure"
      - "traefik.http.routers.hypha.tls.certresolver=leresolver"
      - "traefik.http.services.hypha.loadbalancer.server.port=9527"
      # - "traefik.http.routers.api.tls.domains[0].main=imjoy.io"
      # - "traefik.http.routers.api.tls.domains[0].sans=*.imjoy.io"
      - "traefik.http.routers.hypha.middlewares=hypha-header"
      - "traefik.http.middlewares.hypha-header.headers.accesscontrolexposeheaders=Inference-Header-Content-Length,Range,Origin,Content-Type,Date"
      - "traefik.http.middlewares.hypha-header.headers.accesscontrolallowheaders=Inference-Header-Content-Length,Accept-Encoding,Content-Encoding,Authorization,Access-Control-Allow-Headers,Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Range,Date"
      - "traefik.http.middlewares.hypha-header.headers.accesscontrolallowmethods=GET,HEAD,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.hypha-header.headers.accesscontrolalloworiginlist=${ALLOW_ORIGINS}"
      - "traefik.http.middlewares.hypha-header.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.hypha-header.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.hypha-header.headers.addvaryheader=true"

  minio:
    image: minio/minio:RELEASE.2022-09-01T23-53-36Z.fips
    restart: always
    volumes:
      - "${DATA_ROOT}:/data"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - hypha-app-engine
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
      # MINIO_BROWSER_REDIRECT_URL: https://s3c.imjoy.io
    command: server /data --console-address ":9001"
    expose:
      - "9000"
      - "9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      - "traefik.http.routers.minio.service=minio"
      - "traefik.http.routers.minio.rule=Host(`reef-s3.aicell.io`)" # &&PathPrefix(`/s3`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls.certresolver=leresolver"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio.middlewares=minio-header" # ,s3-stripprefix"
      # - "traefik.http.middlewares.s3-stripprefix.stripprefix.prefixes=/s3"
      # - "traefik.http.middlewares.s3-stripprefix.stripprefix.forceslash=false"
      - "traefik.http.middlewares.minio-header.headers.accesscontrolallowheaders=Authorization,Access-Control-Allow-Headers,Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Range,x-amz-content-sha256,x-amz-date,x-amz-user-agent"
      - "traefik.http.middlewares.minio-header.headers.accesscontrolallowmethods=GET,HEAD,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.minio-header.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.minio-header.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.minio-header.headers.addvaryheader=true"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.routers.minio-console.rule=Host(`reef-s3c.aicell.io`)"
      - "traefik.http.routers.minio-console.entrypoints=websecure"
      - "traefik.http.routers.minio-console.tls.certresolver=leresolver"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"

networks:
  hypha-app-engine:
    external: true